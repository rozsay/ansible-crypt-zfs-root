---
- include_tasks: pre.yml
- include_tasks: disks.yml

#- name: 'Check for existing keyfile.'
#  stat: path= /boot/{{ _root_pool }}.key
#  register: keyfile

#- name: 'Create keyfile'
#  file: path= /boot/{{ _root_pool }}.key owner=root group=root mode=0400 state=touch
#  when: keyfile.stat.exists == false

- name: Create key file
  command: dd if=/dev/random of=/boot/{{ _root_pool }}.key bs=1 count=32
  when: _lukscrypt | default(false) | bool == true

- include_tasks: create_zfs.yml

##############################################################################################################################################3

- name: format and mount {{ _installdir }}boot
  shell: "mke2fs -t ext2 {{ item }} && mkdir {{ _installdir }}boot && mount {{ item }} {{ _installdir }}boot"
  with_items:
#    - "{{ (_root_device_list | length > 1) | (_root_device_list | map('regex_replace', '(.*)', '\\g<1>' + _boot_part_append) | list).0 }}"
    - "{{ _root_device_list }}{{ _boot_part_append }}"
  
- name: format and mount {{ _installdir }}boot/efi
  shell: "mkfs.msdos -F 32 -n EFI {{ item }} && mkdir {{ _installdir }}boot/efi && mount {{ item }} {{ _installdir }}boot/efi"
  with_items:
#    - "{{ (_root_device_list | length > 1) | (_root_device_list | map('regex_replace', '(.*)', '\\g<1>' + _efi_part_append) | list).0 }}"
    -  - "{{ _root_device_list }}{{ _efi_part_append }}"
  when: _efi | default(false) | bool == true

- include_tasks: luks.yml

##############################################################################################################################################3

- name: run debootstrap and set devices=off for root pool
  shell: "debootstrap {{ _ubuntu_release }} {{ _installdir }} && zfs set devices=off {{ _root_pool }}"

#- name: set devices=off for data pool
#  shell: "zfs set devices=off {{ _data_pool }}"

- name: write /etc/hostname in chroot
  copy:
    content: "{{ _hostname.short }}"
    dest: "{{ _installdir }}etc/hostname"

- name: write {{ _installdir }}apt/sources.list in chroot
  template:
    src: etc/apt/sources.j2
    dest: "{{ _installdir }}etc/apt/sources.list"

- name: add hostname entries to {{ _installdir }}hosts in chroot
  lineinfile:
    line: "127.0.0.1 {{ _hostname.short }} {{ _hostname.long }}"
    path: "{{ _installdir }}etc/hosts"
    state: present
    insertbefore: BOF

- name: mount special filesystems for chroot
  shell: "mount --rbind {{ item }}"
  with_items:
    - /dev "{{ _installdir }}dev"
    - /proc "{{ _installdir }}proc"
    - /sys "{{ _installdir }}sys"
  args:
    warn: false

- name: Get physical interfaces names
  command: find /sys/class/net -type l -not -lname '*virtual*' -printf '%f\n'
  register: physical_interfaces_name
  changed_when: false
  check_mode: false

- name: Show interfaces details
  debug:
    msg: "{{ lookup('vars', 'ansible_' + item) }}"
  loop: "{{ physical_interfaces_name.stdout_lines }}"

- import_tasks: netplan.yml
  when: netplan_enabled

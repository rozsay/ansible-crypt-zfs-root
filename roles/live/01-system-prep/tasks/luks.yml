---
## Create and open crypto layer (((

# _crypt_passphrase: "Password"
# _luksname: cryptstore
# _lukscrypt: true
# _lukscryptkey: "/boot/{{ _luksname }}/{{ _root_pool }}.key"
# _luksoptions: "--type=luks1 -qc aes-xts-plain64 -s 512 -h sha256"

- name: 'Encrypting the cryptstore device(s) with LUKS'
  shell: echo "{{ _crypt_passphrase }}" | cryptsetup luksFormat {{ _luksoptions }} "{{ item }}"
# --type=luks1 -qc aes-xts-plain64 -s 512 -h sha256
  with_items:
    - "{{ _root_device_list }}{{ _cryptstore_part_append }}"
  when: _lukscrypt | default(false) | bool == true

- name: 'Open encrypted disk'
  shell: echo "{{ _crypt_passphrase }}" | cryptsetup luksOpen "{{ item.0 }} {{ item.1 }}"
  with_together:
    - "{{ _root_device_list }}{{ _cryptstore_part_append }}"
    - "{{ _luksname }}"

- name: 'Check for existing keyfile.'
  stat: "path={{_lukscryptkey}}"
  register: keyfile

- name: 'Add keyfile to LUKS volume'
  shell: echo "{{ password }}" | cryptsetup luksAddKey "{{item}}" "{{ _lukscryptkey}}"
  with_items:
    -  "{{ _root_device_list }}{{ _cryptstore_part_append }}"

#- name: 'Making filesystem'
#  command: 'mkfs.{{ item.0 }} /dev/mapper/{{ vgname }}-{{ item.1 }}'
#  with_together:
#    - "{{ fstype }}"
#    - "{{ lvname }}"

#- name: 'Mount the new filesystem and add to /etc/fstab'
#  mount: name="{{ item.0 }}" src=/dev/mapper/"{{ vgname }}"-"{{ item.1 }}" fstype="{{ item.2 }}" state=mounted
#  with_together:
#    - "{{ mountpoint }}"
#    - "{{ lvname }}"
#    - "{{ fstype }}"

- name: format and mount {{ _installdir }}boot/cryptstore
  shell: "mkfs.msdos -F 32 -n EFI {{ item }} && mkdir {{ _installdir }}boot/cryptstore && mount {{ item }} {{ _installdir }}boot/cryptstore"
  with_items:
    - "/dev/mapper/{{ _luksname }}"
  when: _lukscrypt | default(false) | bool == true

- name: copy file from local host to remote host (relative path, ./files/)
  copy:
    src: "/boot/{{ _root_pool }}.key"
    dest: "{{ _installdir }}boot/cryptstore/{{ _root_pool }}.key"
  when: _lukscrypt | default(false) | bool == true

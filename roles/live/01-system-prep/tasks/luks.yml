---
## Create and open crypto layer (((

# _crypt_passphrase: "Password"
# _luksname: cryptstore
# _lukscrypt: true
# _lukscryptkey: "/boot/{{ _luksname }}/{{ _root_pool }}.key"
# _luksoptions: "--type=luks1 -qc aes-xts-plain64 -s 512 -h sha256"
# _luksbootname: cryptboot

#- debug:
#    msg: LUKS > {{ _crypt_passphrase }}

- name: Check if LUKS
  shell: cryptsetup isLuks "{{ _root_device_list }}{{ _cryptstore_part_append }}" && echo "true" || echo "false"
  register: is_luks

- name: is LUKS device
  debug: var=is_luks

- name: create temp file
  command: mktemp /tmp/encdisk.XXXXXXX
  register: tmp

- name: write password to temp file
  template: src=templates/encrypt-pass.j2 dest={{tmp.stdout}}

- name: encrypt boot disk
  shell: cat {{tmp.stdout}} | cryptsetup --verbose --batch-mode luksFormat {{ _root_device_list }}{{ _boot_part_append }}

- name: open encrypted boot disk
  shell: cat {{tmp.stdout}} | cryptsetup luksOpen {{ _root_device_list }}{{ _boot_part_append }} {{ _luksbootname }}

- name: format and mount crypted {{ _installdir }}boot
  shell: "mke2fs -t ext2 {{ item }} && mkdir {{ _installdir }}boot && mount {{ item }} {{ _installdir }}boot"
  with_items:
    - "/dev/mapper/{{ _luksbootname }}"
  when: _lukscrypt | default(false) | bool == true


- name: encrypt disk
  shell: cat {{tmp.stdout}} | cryptsetup --verbose --batch-mode luksFormat {{ _root_device_list }}{{ _cryptstore_part_append }}

- name: open encrypted disk
  shell: cat {{tmp.stdout}} | cryptsetup luksOpen {{ _root_device_list }}{{ _cryptstore_part_append }} {{ _luksname }}

- debug:
    msg: LUKS33 > "{{tmp.stdout}}"

#- name: 'Making filesystem'
#  command: 'mkfs.{{ item.0 }} /dev/mapper/{{ vgname }}-{{ item.1 }}'
#  with_together:
#    - "{{ fstype }}"
#    - "{{ lvname }}"

#- name: 'Mount the new filesystem and add to /etc/fstab'
#  mount: name="{{ item.0 }}" src=/dev/mapper/"{{ vgname }}"-"{{ item.1 }}" fstype="{{ item.2 }}" state=mounted
#  with_together:
#    - "{{ mountpoint }}"
#    - "{{ lvname }}"
#    - "{{ fstype }}"

- name: format and mount {{ _installdir }}boot/cryptstore
  shell: "mkfs.msdos -F 32 -n EFI {{ item }} && mkdir {{ _installdir }}boot/cryptstore && mount {{ item }} {{ _installdir }}boot/cryptstore"
  with_items:
    - "/dev/mapper/{{ _luksname }}"
  when: _lukscrypt | default(false) | bool == true

- name: copy file from local host to remote host (relative path, ./files/)
  copy:
    src: "/boot/{{ _root_pool }}.key"
    dest: "{{ _installdir }}boot/cryptstore/{{ _root_pool }}.key"
  when: _lukscrypt | default(false) | bool == true

#- name: 'Check for existing keyfile.'
#  stat: "path={{_lukscryptkey}}"
#  register: keyfile

#- name: 'Add keyfile to LUKS volume'
#  shell: echo {{ _crypt_passphrase }} | cryptsetup luksAddKey "{{item}}" "{{ _lukscryptkey}}"
# with_items:
#    - "/dev/mappaer/{{ _luksname }}"

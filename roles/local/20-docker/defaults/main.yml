###
### Docker
###

# Where you want Docker to store its container data.
docker_home: /mnt/data2000new/docker

# Where you want Docker to store images
docker_image_directory: "{{ docker_home }}/data"

# Docker storage driver, see https://docs.docker.com/storage/storagedriver/select-storage-driver/#supported-backing-filesystems
# You might want to change this to ZFS, depending on your underlying filesystem.
docker_storage_driver: zfs

nas_user: sa

# Your email and domain, used for Let's Encrypt SSL certs
nas_email: me@info.local

# Applications will have subdomain SSL certificates created if Traefik is enabled, e.g. ansible-nas.<your-domain>, nextcloud.<your-domain>
nas_domain: info.local

transmission_enabled: true
docker_enabled: true
samba_enabled: true

# Edition can be one of: 'ce' (Community Edition) or 'ee' (Enterprise Edition).
docker_edition: 'ce'
#docker_package: "docker-{{ docker_edition }}"
docker_package_state: present

# Service options.
docker_service_state: started
docker_service_enabled: true
docker_restart_handler_state: restarted

# Docker Compose options.
docker_install_compose: true
docker_compose_version: "1.26.0"
docker_compose_path: /usr/local/bin/docker-compose

# Used only for Debian/Ubuntu. Switch 'stable' to 'edge' if needed.
docker_apt_release_channel: stable
docker_apt_arch: amd64
docker_apt_repository: "deb [arch={{ docker_apt_arch }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} {{ docker_apt_release_channel }}"
docker_apt_ignore_key_error: true
docker_apt_gpg_key: https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg

# A list of users who will be added to the docker group.
docker_users: []

docker_package:
  - docker
  - docker-ce

docker__package_dependencies:
  - 'apt-transport-https'
  - 'ca-certificates'
  - 'curl'
  - 'cron'
  - 'gnupg2'
  - 'software-properties-common'

docker__pip_dependencies:
  - 'gcc'
  - 'python3-setuptools'
  - 'python3-dev'
  - 'python3-pip'
  - 'virtualenv'


---
# Aditional disks that need to be formated and mounted.
# See README for syntax and usage.
disk_additional_disks:
 - disk: /dev/sda
   part: /dev/sda1
   fstype: ext4
_target_disks: "{{ _legacy_device_nodes | ternary(((_root_disks + _data_disks) | map('regex_replace', '(.*)', '/dev/\\g<1>') | list),(_root_disks_by_id + _data_disks_by_id)) }}"
_root_disks:
  - sda
  - sdb
_data_disks: []
_root_disks_by_id: "{{ _root_disks | map('extract', hostvars[inventory_hostname]['ansible_devices'], ['links', 'ids', 0]) | list | map('regex_replace', '(.*)', '/dev/disk/by-id/\\g<1>') | list }}"
_data_disks_by_id: "{{ _data_disks | map('extract', hostvars[inventory_hostname]['ansible_devices'], ['links', 'ids', 0]) | list | map('regex_replace', '(.*)', '/dev/disk/by-id/\\g<1>') | list }}"
_root_device_list: "{{ _legacy_device_nodes | ternary((_root_disks | map('regex_replace', '(.*)', '/dev/\\g<1>') | list), _root_disks_by_id) }}"
_data_device_list: "{{ _legacy_device_nodes | ternary((_data_disks | map('regex_replace', '(.*)', '/dev/\\g<1>') | list), _data_disks_by_id) }}"
_data_partitions: false
_root_part_append: "{{ _legacy_device_nodes | ternary('1', '-part1') }}"
_data_part_append: "{{ _legacy_device_nodes | ternary('1', '-part1') }}"
_boot_part_append: "{{ _legacy_device_nodes | ternary('3', '-part3') }}"
_crypt_part_append: "{{ _legacy_device_nodes | ternary('4', '-part4') }}"

_mbr_partition_flags: "-a1 -n2:34:2047  -t2:EF02"
_efi_partition_flags: "    -n3:1M:+512M -t3:EF00"
_root_partition_flags: "-n1:0:0         -t1:BF01"
_cryptboot_partition_flags: "-n4:0:+512M  -t4:8300"
_cryptroot_partition_flags: "-n1:0:0      -t1:8300"
_partition_flags: "{{ (_efi | default(false) | bool | ternary(_efi_partition_flags,_mbr_partition_flags)) + ' ' + (_luks | default(false) | bool | ternary(_cryptboot_partition_flags + ' ' + _cryptroot_partition_flags,_root_partition_flags)) }}"
#a8 for 4k size
_data_partition_flags: "-a8 -n1:0:0 {{ (_luks | default(false) | bool | ternary('-t1:8300', '-t1:BF01')) }}"
_luks: false
